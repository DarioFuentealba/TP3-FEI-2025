"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import pymysql
pymysql.install_as_MySQLdb()

from datetime import timedelta

from pathlib import Path
from dotenv import load_dotenv
import os
#load_dotenv()

BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv(BASE_DIR / ".env")  # üëà esto carga el archivo .env desde la ra√≠z

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
MEDIA_URL = '/media/'  # las imagenes se guardan en la capeta media. 
MEDIA_ROOT = BASE_DIR / 'media' # son las url que se guaradan en la base de datos. 


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-i*7a$mtg*&4^(ui!%ke2g=3+&czmn6n_t0z)#x)zgd^n3k&&c8'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'computacion.apps.ComputacionConfig',# computacion
    'corsheaders',
    'rest_framework',
    'venta.apps.VentaConfig', # compra
    'cotizacion.apps.CotizacionConfig', # cotizacion
    'usuario.apps.UsuarioConfig', # usuarios
    'encuesta.apps.EncuestaConfig', # encuesta
    'proveedor.apps.ProveedorConfig', # proveedores

    'rest_framework_simplejwt', # Roles

    # Armar tu PC empieza aca
    "api.apps.ApiConfig",
    # Armar tu PC termina aca

    'carrito', #Carrito
    'productos',
    'servicios_externos',
    'envios',
]


MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'

CORS_ALLOW_ALL_ORIGINS = True  # para pruebas
CORS_ALLOW_HEADERS = [
    'authorization',
    'content-type',
#CORS_ALLOWED_ORIGINS = [
#    "http://localhost:3000",
]

print("DB_PASSWORD cargado:", os.getenv("DB_PASSWORD")) # a mi me sale esto: DB_PASSWORD cargado: ""

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
load_dotenv()
DATABASES = {
    #'default': {
    #    'ENGINE': 'django.db.backends.sqlite3',
    #    'NAME': BASE_DIR / 'db.sqlite3',
    #}

    # Armar tu PC empieza aca
    "default": {
        "ENGINE": "django.db.backends.mysql",
        #"NAME": os.getenv("DB_NAME"),
        "NAME": 'tp3',
        "USER": 'root',
        #"USER": os.getenv("DB_USER"),
       # "PASSWORD": os.getenv("DB_PASSWORD"), # obtiene la contrase√±a de las variables de entorno, si no esta definida el password es "". 
      # "PASSWORD": 'mi_nueva_password',
      "PASSWORD": '1234',
        "HOST": "127.0.0.1",
        "PORT": "3306",
        "OPTIONS": {"charset": "utf8mb4"},
    }
    # Armar tu PC termina aca
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


#CREATE DATABASE CompuTienda CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
#CREATE USER 'root'@'localhost' IDENTIFIED BY '';
#GRANT ALL PRIVILEGES ON CompuTienda.* TO 'django_user'@'localhost';
#FLUSH PRIVILEGES;
#AUTH_USER_MODEL="usuario.Usuario"


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
}



SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=600),   # token v√°lido por 60 minutos
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),      # token de refresco v√°lido 7 d√≠as
    'ROTATE_REFRESH_TOKENS': False,                   # Si True, genera nuevo refresh al renovar
    'BLACKLIST_AFTER_ROTATION': True,                 # Invalida el anterior si se rota
}